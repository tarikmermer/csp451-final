name: CI/CD SmartRetail

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies & Run tests (example)
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          # Add your test commands here (e.g., pytest)
          echo "Tests passed!"  # Placeholder

  build:
    runs-on: ubuntu-latest
    needs: test
    env:
      ACR_LOGIN_SERVER: myacr.azurecr.io  # Change if using ACR
    steps:
      - uses: actions/checkout@v3
      
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build backend Docker image
        run: |
          docker build -t smartretail-backend ./backend
          # Tag for ACR if used
          # docker tag smartretail-backend $ACR_LOGIN_SERVER/smartretail-backend:latest

      - name: Build supplier-api Docker image
        run: |
          docker build -t smartretail-supplier-api ./supplier-api
          # Tag for ACR if used
          # docker tag smartretail-supplier-api $ACR_LOGIN_SERVER/smartretail-supplier-api:latest

      - name: Login to ACR (optional)
        run: |
          echo ${{ secrets.ACR_PASSWORD }} | docker login $ACR_LOGIN_SERVER --username ${{ secrets.ACR_USERNAME }} --password-stdin

      - name: Push images to ACR (optional)
        run: |
          # docker push $ACR_LOGIN_SERVER/smartretail-backend:latest
          # docker push $ACR_LOGIN_SERVER/smartretail-supplier-api:latest
          echo "Skipping push - enable if you want to push"

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: SSH and deploy to VM
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          # Use either password or private key:
          password: ${{ secrets.VM_PASSWORD }}
          # privateKey: ${{ secrets.VM_SSH_KEY }}
          script: |
            cd ~/csp451-final
            # Pull latest code from GitHub
            git pull origin main
            # Build and run docker-compose (make sure docker-compose.yml is there)
            docker-compose down
            docker-compose build
            docker-compose up -d
            # Deploy Azure Function
            cd azure-function
            func azure functionapp publish smartretail-python-func --python
